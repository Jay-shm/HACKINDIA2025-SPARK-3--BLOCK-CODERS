{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_arbitrator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldArbitrator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newArbitrator",
						"type": "address"
					}
				],
				"name": "ArbitratorChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "DisputeRaised",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "merchantAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "buyerAmount",
						"type": "uint256"
					}
				],
				"name": "DisputeResolved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					}
				],
				"name": "EscrowCompleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "merchant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "currency",
						"type": "address"
					}
				],
				"name": "EscrowCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "funder",
						"type": "address"
					}
				],
				"name": "EscrowFunded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					}
				],
				"name": "EscrowRefunded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "receiptId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "ReceiptGenerated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "TokensWhitelisted",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "TEST_USDT_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "arbitrator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "checkEscrowStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "claimExpiredEscrow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "completeEscrow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_merchant",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_currency",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_deadlineDays",
						"type": "uint256"
					}
				],
				"name": "createEscrow",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "escrowId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "defaultEscrowDays",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "escrows",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "merchant",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "enum PayMe3Escrow.EscrowState",
						"name": "state",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "disputeReason",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeCollector",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "fundEscrow",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "generateReceipt",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "receiptId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "getEscrow",
				"outputs": [
					{
						"internalType": "address",
						"name": "merchant",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "currency",
						"type": "address"
					},
					{
						"internalType": "enum PayMe3Escrow.EscrowState",
						"name": "state",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "disputeReason",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "platformFeeRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "_reason",
						"type": "string"
					}
				],
				"name": "raiseDispute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "receipts",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					}
				],
				"name": "refundEscrow",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_escrowId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_merchantPercent",
						"type": "uint256"
					}
				],
				"name": "resolveDispute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_isSupported",
						"type": "bool"
					}
				],
				"name": "setTokenSupport",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "supportedTokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newArbitrator",
						"type": "address"
					}
				],
				"name": "updateArbitrator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_days",
						"type": "uint256"
					}
				],
				"name": "updateDefaultEscrowDays",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newFeeCollector",
						"type": "address"
					}
				],
				"name": "updateFeeCollector",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newFeeRate",
						"type": "uint256"
					}
				],
				"name": "updatePlatformFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_receiptId",
						"type": "bytes32"
					}
				],
				"name": "verifyReceipt",
				"outputs": [
					{
						"internalType": "bool",
						"name": "valid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "Escrow contract for PayMe3 payment links on Ethereum Sepolia",
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"checkEscrowStatus(bytes32)": {
					"details": "Check if an escrow exists and is active",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					},
					"returns": {
						"exists": "Whether the escrow exists",
						"isActive": "Whether the escrow is in an active state"
					}
				},
				"claimExpiredEscrow(bytes32)": {
					"details": "Claim a refund after the escrow deadline has passed",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					}
				},
				"completeEscrow(bytes32)": {
					"details": "Complete the escrow and release funds to the merchant",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					}
				},
				"createEscrow(address,uint256,address,string,uint256)": {
					"details": "Creates a new escrow agreement",
					"params": {
						"_amount": "Amount to be escrowed",
						"_currency": "Address of the token/currency (address(0) for ETH)",
						"_deadlineDays": "Number of days until the escrow expires (0 for default)",
						"_description": "Description of the escrow agreement",
						"_merchant": "Address of the merchant/seller"
					},
					"returns": {
						"escrowId": "Unique identifier for the escrow"
					}
				},
				"fundEscrow(bytes32)": {
					"details": "Fund an existing escrow with payment",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					}
				},
				"generateReceipt(bytes32)": {
					"details": "Generate a receipt for an escrow",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					},
					"returns": {
						"receiptId": "Unique identifier for the receipt"
					}
				},
				"getEscrow(bytes32)": {
					"details": "Get escrow details",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"raiseDispute(bytes32,string)": {
					"details": "Raise a dispute for an escrow",
					"params": {
						"_escrowId": "The unique identifier for the escrow",
						"_reason": "Reason for the dispute"
					}
				},
				"refundEscrow(bytes32)": {
					"details": "Refund the escrowed amount back to the buyer",
					"params": {
						"_escrowId": "The unique identifier for the escrow"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"resolveDispute(bytes32,uint256)": {
					"details": "Resolve a disputed escrow (only arbitrator)",
					"params": {
						"_escrowId": "The unique identifier for the escrow",
						"_merchantPercent": "Percentage of funds to send to merchant (0-100)"
					}
				},
				"setTokenSupport(address,bool)": {
					"details": "Add or remove a token from the supported list (owner only)",
					"params": {
						"_isSupported": "Whether the token should be supported",
						"_token": "Token address"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateArbitrator(address)": {
					"details": "Update the arbitrator address (owner only)",
					"params": {
						"_newArbitrator": "New arbitrator address"
					}
				},
				"updateDefaultEscrowDays(uint256)": {
					"details": "Update the default escrow period in days (owner only)",
					"params": {
						"_days": "New default escrow period in days"
					}
				},
				"updateFeeCollector(address)": {
					"details": "Update fee collector address (owner only)",
					"params": {
						"_newFeeCollector": "New fee collector address"
					}
				},
				"updatePlatformFee(uint256)": {
					"details": "Update platform fee rate (owner only)",
					"params": {
						"_newFeeRate": "New fee rate in basis points (e.g., 100 = 1%)"
					}
				},
				"verifyReceipt(bytes32)": {
					"details": "Verify if a receipt ID is valid",
					"params": {
						"_receiptId": "The receipt ID to verify"
					},
					"returns": {
						"valid": "Whether the receipt ID is valid"
					}
				}
			},
			"title": "PayMe3Escrow",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"PayMe3Escrow.sol": "PayMe3Escrow"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
			"license": "MIT",
			"urls": [
				"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
				"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"PayMe3Escrow.sol": {
			"keccak256": "0x7448b43dcc040ef72a6ece0aa45b839d91997f61589537e3bd0e8fd627fc619c",
			"license": "MIT",
			"urls": [
				"bzz-raw://c991aec306ed2c4d2ec1719b5efa11594a3e11a081545af5ecf1732c63fbcf97",
				"dweb:/ipfs/QmZz39YZgNRkYW8Hy8KybdGdbzDaZMTJkR3XdRrxRrJAmP"
			]
		}
	},
	"version": 1
}